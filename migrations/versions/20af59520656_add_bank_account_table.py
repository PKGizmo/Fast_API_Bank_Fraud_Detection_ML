"""add_bank_account_table

Revision ID: 20af59520656
Revises: 4287f3d3a275
Create Date: 2025-07-28 11:41:01.204083

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20af59520656'
down_revision: Union[str, None] = '4287f3d3a275'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bankaccount',
    sa.Column('account_type', sa.Enum('Current', 'Savings', 'FixedDeposit', 'Business', name='accounttypeenum'), nullable=False),
    sa.Column('currency_type', sa.Enum('USD', 'EUR', 'GBP', 'KES', 'PLN', name='accountcurrencyenum'), nullable=False),
    sa.Column('account_status', sa.Enum('Active', 'Inactive', 'Pending', 'Closed', 'Frozen', name='bankaccountstatusenum'), nullable=False),
    sa.Column('account_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('account_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('account_balance', sa.Float(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('kyc_submitted', sa.Boolean(), nullable=False),
    sa.Column('kyc_verified', sa.Boolean(), nullable=False),
    sa.Column('kyc_verified_by', sa.Uuid(), nullable=False),
    sa.Column('interest_rate', sa.Float(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('kyc_verified_on', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bankaccount_account_number'), 'bankaccount', ['account_number'], unique=True)
    op.drop_constraint('nextofkin_user_id_fkey', 'nextofkin', type_='foreignkey')
    op.create_foreign_key(None, 'nextofkin', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('profile_user_id_fkey', 'profile', type_='foreignkey')
    op.create_foreign_key(None, 'profile', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'profile', type_='foreignkey')
    op.create_foreign_key('profile_user_id_fkey', 'profile', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'nextofkin', type_='foreignkey')
    op.create_foreign_key('nextofkin_user_id_fkey', 'nextofkin', 'user', ['user_id'], ['id'])
    op.drop_index(op.f('ix_bankaccount_account_number'), table_name='bankaccount')
    op.drop_table('bankaccount')
    # ### end Alembic commands ###
