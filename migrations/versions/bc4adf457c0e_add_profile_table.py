"""add_profile_table

Revision ID: bc4adf457c0e
Revises: 1c56e16025fc
Create Date: 2025-07-24 08:41:23.042416

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bc4adf457c0e'
down_revision: Union[str, None] = '1c56e16025fc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profile',
    sa.Column('title', sa.Enum('Mr', 'Mrs', 'Miss', name='salutationschema'), nullable=False),
    sa.Column('gender', sa.Enum('Male', 'Female', name='generschema'), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('country_of_birth', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('place_of_birth', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('marital_status', sa.Enum('Married', 'Divorced', 'Single', 'Widowed', name='maritalstatusschema'), nullable=False),
    sa.Column('means_of_identification', sa.Enum('Passport', 'Drivers_License', 'National_ID', name='identificationtypeschema'), nullable=False),
    sa.Column('id_issue_date', sa.Date(), nullable=False),
    sa.Column('id_expiry_date', sa.Date(), nullable=False),
    sa.Column('passport_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nationality', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('employement_status', sa.Enum('Employed', 'Unemployed', 'Self_Employed', 'Student', 'Retired', name='employementstatusschema'), nullable=False),
    sa.Column('employer_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('employer_address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('employer_country', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('annual_income', sa.Float(), nullable=False),
    sa.Column('date_of_employement', sa.Date(), nullable=False),
    sa.Column('profile_photo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id_photo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('signature_photo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('profile')
    # ### end Alembic commands ###
